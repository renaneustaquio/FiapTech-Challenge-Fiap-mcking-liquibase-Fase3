name: Build and Migrate DB

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug - List files in repository root
        run: ls -la

      - name: Debug - List files in Terraform directory
        run: ls -la Terraform

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Cleanup Terraform Cache
        run: rm -rf Terraform/.terraform Terraform/.terraform.lock.hcl

      - name: Terraform Init
        run: terraform init -upgrade -no-color | tee terraform-init.log
        working-directory: Terraform

      - name: Debug - Show Terraform Init Log
        run: cat Terraform/terraform-init.log

      - name: Terraform Format
        run: terraform fmt -check -diff
        working-directory: Terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: Terraform

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
        working-directory: Terraform

      - name: Terraform Plan Output
        run: terraform show -no-color tfplan
        continue-on-error: true
        working-directory: Terraform

  liquibase:
    runs-on: ubuntu-latest
    needs: build
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Get DB Credentials from AWS Secrets Manager
        id: get_secret
        run: |
          SECRET=$(aws secretsmanager get-secret-value --secret-id aws-secretsmanager-secret-teste-4 --query SecretString --output text)

          # Extrair partes do segredo
          HOST_PORT=$(echo $SECRET | sed -n 's/.*Host=\([^;]*\);.*/\1/p')
          DATABASE=$(echo $SECRET | sed -n 's/.*Database=\([^;]*\);.*/\1/p')
          USERNAME=$(echo $SECRET | sed -n 's/.*Username=\([^;]*\);.*/\1/p')
          PASSWORD=$(echo $SECRET | sed -n 's/.*Password=\([^;]*\).*/\1/p')

          JDBC_URL="jdbc:postgresql://$HOST_PORT/$DATABASE?user=$USERNAME&password=$PASSWORD"

          echo "DB_URL=$JDBC_URL" >> $GITHUB_ENV

      - name: Run Liquibase Migration
        run: |
          docker run --rm \
            -v ${{ github.workspace }}/liquibase/changelog:/liquibase/changelog \
            liquibase/liquibase \
            --url="${{ env.DB_URL }}" \
            --changeLogFile=changelog/db.changelog-master.xml \
            update
